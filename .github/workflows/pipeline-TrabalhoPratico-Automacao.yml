name: TrabalhoPratico-Automacao

on: 
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Ambiente a ser deployado'
        type: environment
        required: true 

jobs:
  helloword:
    runs-on: ubuntu-latest
    steps:
      - name: step do job1
        run: echo Bem vindo ao Trabalho Pratico de Automação!
        
  build:
    if: "contains(github.event.head_commit.message, '[pipeline]')"  
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - run: npm --prefix frontend install
      - run: npm --prefix frontend run build
      - run: cd frontend && npx next export
      - uses: actions/upload-artifact@v2
        with:
          name: deploy
          path: frontend/out

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      AWS_EC2_METADATA_DISABLED: true
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: setup Python virtualenv and install packages
        run: |
          python3 -m venv py3
          source py3/bin/activate
          python -m pip install --upgrade pip
          pip install boto3 botocore ansible==2.10
          echo "ANSIBLE_PYTHON_INTERPRETER=$VIRTUAL_ENV/bin/python3" >> $GITHUB_ENV
          echo "ENVIRONMENT_SETUP=true" >> $GITHUB_ENV
      - uses: actions/download-artifact@v2
        with:
          name: deploy
          path: .environment/frontend/out
      - name: files upload
        run: |
          source py3/bin/activate
          ansible-playbook -vvvv .environment/s3.yml

